version: "1"

services:
  estate_back:
    build:
      context: ./
    container_name: estate-back-app
    ports:
      - "3003:3000"
    restart: always
    volumes:
      - ./backend/src:/usr/src/app/src
    environment:
      POSTGRES_HOST: "estate_db"
      POSTGRES_DB: "estate_db"
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: "estate"
      POSTGRES_PASSWORD: "qwerty"
      SECRET_KEY: ${SECRET_KEY}
    env_file:
      - ./.env
    depends_on:
      estate_db:
        condition: service_healthy


  nginx_estate_back:
    image: nginx:latest
    container_name: nginx-back
    restart: always
    ports:
      - 88:80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.estate.tesseractmaks.tech`)"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - estate_back 


  estate_db:
    build:
      context: ./backend/db_docker-conf/
    container_name: real-estate
    environment:
      POSTGRES_HOST: "estate_db"
      POSTGRES_DB: "estate_db"
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: "estate"
      POSTGRES_PASSWORD: "qwerty"
    env_file:
      - ./.env
    ports:
      - "5433:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d estate_db -U estate"]
      interval: 5s
      timeout: 5s
      retries: 5
        #volumes:
        #- pg_estate_db:/var/lib/postgresql/data


  mongo:
    image: mongo
    restart: always
    ports:
      - "27018:27017"
#    volumes:
#      - ./db_mongo:/data/db


  redis_estate:
    image: redis:7
    container_name: estate-redis
    restart: always
    ports:
      - "6378:6379"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'


  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana


volumes:
  pg_estate_db:
  db_mongo:
  backend:
  grafana_data:

networks:
  default:
    name: proxynet
    external: true





